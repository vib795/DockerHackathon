version: '3'
services:
  # PostgreSQL database container
  db:
    image: postgres:latest
    container_name: DBContainer
    environment:
      POSTGRES_DB: tasks_db
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"  # Map the PostgreSQL container port to the host
    volumes:
      - db_data:/var/lib/postgresql/data  # Use the named volume for PostgreSQL data

  # Python application container
  createapp:
    # build: ./  # Replace with the path to your Python app code
    image: virtual_assistant_application
    container_name: vir_asst_app
    depends_on:
      - db
    environment:
      DB_HOST: db  # This is the hostname of the PostgreSQL container within the Docker network
    command: python -i app.py  # Add the -i option to run Python in interactive mode
    stdin_open: true
    tty: true
    volumes:
      - ./app_code:/app_code  # Mount your Python app code as a volume

  getapp:
    # build: ./  # Replace with the path to your Python app code
    image: get_reminders
    container_name: get_reminders
    depends_on:
      - db
    environment:
      DB_HOST: db  # This is the hostname of the PostgreSQL container within the Docker network
    command: python -i app.py  # Add the -i option to run Python in interactive mode
    stdin_open: true
    tty: true
    volumes:
      - ./app_code:/app_code  # Mount your Python app code as a volume
volumes:
  db_data:

  # docker build . -t virtual_assistant_application
  # docker-compose up -d
  # docker-compose exec app python3 -i app.py
  # docker exec -it DBContainer bash
  # psql -U singh123 -d tasks_db
  # select * from reminders